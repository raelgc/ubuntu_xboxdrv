start on (filesystem and RUNLEVEL [2345]) or starting xboxdrv-helper
env RUNPATH="/var/run/xboxdrv"
env DEFAULT="/etc/default/xboxdrv"
pre-start script
    # create working directory
    mkdir -p $RUNPATH
    mkdir ${RUNPATH}/profile
    # load user options
    if [ -f $DEFAULT ] ; then
        . $DEFAULT
    fi
    # remove potentially problematic js files on start
    rm -f /dev/input/js*
    # initialize loop variables
    SLOTID=1
    EXISTS=true
    # this loop creates files named the value of CONTROLLER[x] from the default file
    # - Inside the files are the options in CONTROLLER[x]_OPTIONS
    while [ "$EXISTS" = true ]; do
        # sets controller usbid container to the variable format of the default file
        CONTROLLER="CONTROLLER${SLOTID}"
        # replace CONTROLLER[x] with its value from the default file
        eval CONTROLLER="\$$CONTROLLER"
        # test for length of a vendor:product pair
        if [ "${#CONTROLLER}" = "9" ]; then
            # set option container to the respective options variable
            OPTIONS="CONTROLLER${SLOTID}_OPTIONS"
            # populate container with options
            eval OPTIONS="\$$OPTIONS"
            # export options into a file named after the appropriate controller
            echo $OPTIONS > "${RUNPATH}/profile/${CONTROLLER}"
            # incriment slot for next iteration
            SLOTID=$(( SLOTID + 1 ))
        # when the last controller profile file is built, exit loop
        else
            EXISTS=false
        fi
    done
end script

post-start script
    # if a controller being added triggered the start of this service, do 
    # - not start any other controllers, just exit
    if [ "$JOB" = "xboxdrv-checker" ]; then
        exit 0
    else
        # loop to try to start one job per profile
        ID="0"
        for PROFILE in `ls $RUNPATH/profile/`; do
            ID=$((ID + 1))
            # seperate vendor and product from profile
            VENDOR=${PROFILE%:*}
            PRODUCT=${PROFILE#*:}
            start xboxdrv ID="$ID" VENDOR="$VENDOR" PRODUCT="$PRODUCT"
        done
    fi
end script

post-stop script
    # cleanup runpath on exit
    rm -rf $RUNPATH
end script
