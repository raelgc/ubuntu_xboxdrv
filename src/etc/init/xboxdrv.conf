# Xboxdrv Controller
stop on stopping ubuntu-xboxdrv or usb-device-removed ID_VENDOR_ID="$VENDOR" ID_MODEL_ID="$PRODUCT"
# This is the job name, which will be the controller id and vendor:product id of the controller
instance ${ID}'|'${VENDOR}':'${PRODUCT}

env DEFAULT="/etc/default/xboxdrv"
env RUNPATH="/var/run/xboxdrv"
script
    # Read configuration variable file if it is present
    if [ -f $DEFAULT ] ; then
        . $DEFAULT
    fi
    # this will store all system pad options from /etc/default/xboxdrv
    PAD_OPTIONS="--silent --daemon --dbus disabled --pid-file ${RUNPATH}/${UPSTART_INSTANCE}.pid"
    
    # checking if user has enabled forcefeedback
    if [ "$FORCE_FEEDBACK" = true ] ; then
        PAD_OPTIONS="$PAD_OPTIONS --force-feedback"
    fi

    # checking if user has enabled mimic_xpad
    if [ "$MIMIC_XPAD" = true ] ; then
        PAD_OPTIONS="$PAD_OPTIONS --mimic-xpad --mimic-xpad-wireless"
    fi
    # adding --detache-kernel-driver
    PAD_OPTIONS="$PAD_OPTIONS --detach-kernel-driver"
    # Get controller options from respective optfile
    CONTROLLER_OPTIONS="$(cat ${RUNPATH}/profile/${VENDOR}:${PRODUCT} )"
    # add xboxdrv options to make this newly connected controller's process unique
    ID_ARGS="--id $((ID - 1)) --wid $((ID - 1)) --led $((ID + 1)) --match usbid=${VENDOR}:${PRODUCT}"
    # store all xboxdrv arguements
    ARGS="$XBOXDRV_OPTIONS $PAD_OPTIONS $ID_ARGS $CONTROLLER_OPTIONS"
    # start xboxdrv with appropriate arguements
     exec xboxdrv $ARGS
end script

pre-stop script
    # remove controllers pid file when job exits
    rm -f ${RUNPATH}/${UPSTART_INSTANCE}.pid
end script
